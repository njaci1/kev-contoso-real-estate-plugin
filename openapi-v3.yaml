openapi: 3.0.1
info:
  title: Contoso Real Estate API
  description: Finds up to date and detailed real estate properties for sale on the market
  version: 0.3.0
servers:
  - url: https://kev-contoso-real-estate-plugin-app.azurewebsites.net
paths:
  /get-listings:
    get:
      operationId: getListings
      summary: Get a list of properties matching the specified criteria
      description: Returns a list of properties, optionally filtered by providing the city, number of bedrooms, number of bathrooms and a list of amenities as query parameters
      parameters:
        - name: city
          in: query
          description: The city to search in
          required: false
          schema:
            type: string
        - name: bedrooms
          in: query
          description: The number of bedrooms
          required: false
          schema:
            type: integer
        - name: bathrooms
          in: query
          description: The number of bathrooms
          required: false
          schema:
            type: integer
        - name: amenities
          in: query
          description: The list of amenities
          required: false
          schema:
            $ref: '#/components/schemas/AmenitiesEnum'
      responses:
        '200':
          description: OK - Returns a list of properties
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Property'
  /post-a-booking:
    post:
      operationId: postBooking
      summary: Add a new booking
      description: Adds a new booking with the specified property ID and a date-time for the next day at 14:00 hrs.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                property-id:
                  type: string
                  description: The ID of the property to book.
      responses:
        '200':
          description: Booking has been successfully added.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /bookings:
    get:
      operationId: getBookings
      summary: Get a list of bookings
      description: Retrieve a list of bookings. You can filter the list by customer name and city.
      parameters:
        - in: query
          name: customerName
          schema:
            type: string
          description: The name of the customer to filter by.
        - in: query
          name: city
          schema:
            type: string
          description: The city to filter by.
      responses:
        '200':
          description: A list of bookings.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: The booking ID.
                    customerName:
                      type: string
                      description: The name of the customer who made the booking.
                    city:
                      type: string
                      description: The city where the booking is made.
                    date:
                      type: string
                      format: date-time
                      description: The date and time of the booking.
        '400':
          description: There was a problem retrieving the bookings.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
components:
  schemas:
    AmenitiesEnum:
      type: string
      enum:
        - air conditioning
        - balcony
        - dishwasher
        - elevator
        - fireplace
        - furniture
        - garden
        - gym
        - heating
        - jacuzzi
        - laundry room
        - microwave
        - no furniture
        - parking
        - patio
        - sauna
        - swimming pool
        - terrace
        - wi-fi
    Property:
      type: object
      properties:
        title:
          type: string
          description: The title of the property listing
        city:
          type: string
          description: The city of the property
        bedrooms:
          type: integer
          description: The number of bedrooms
        bathrooms:
          type: integer
          description: The number of bathrooms
        amenities:
          type: array
          description: The list of amenities
          items:
            $ref: '#/components/schemas/AmenitiesEnum'
        description:
          type: string
          description: The description of the property
